version: '{build}'

image: Visual Studio 2015

environment:
  # disable LFS file downloading during regular cloning
  GIT_LFS_SKIP_SMUDGE: 1

cache:
- sqlite-dll-win32-x86-3240000.zip -> .appveyor.yml
- sqlite-dll-win64-x64-3240000.zip -> .appveyor.yml
- nimbus-deps.zip -> .appveyor.yml
- NimBinaries

matrix:
  # We always want 32 and 64-bit compilation
  fast_finish: false

platform:
  - x86
  - x64

install:
  - git submodule update --init --recursive
  - setlocal EnableExtensions EnableDelayedExpansion

  - IF "%PLATFORM%" == "x86" (
      SET "SQLITE_URL=https://www.sqlite.org/2018/sqlite-dll-win32-x86-3240000.zip" &
      SET "SQLITE_ARCHIVE=sqlite-dll-win32-x86-3240000.zip" &
      SET "ROCKSDB_URL=https://github.com/status-im/nimbus-deps/releases/download/nimbus-deps/nimbus-deps.zip" &
      SET "ROCKSDB_ARCHIVE=nimbus-deps.zip"
    )
  - IF "%PLATFORM%" == "x64" (
      SET "SQLITE_URL=https://www.sqlite.org/2018/sqlite-dll-win64-x64-3240000.zip" &
      SET "SQLITE_ARCHIVE=sqlite-dll-win64-x64-3240000.zip" &
      SET "ROCKSDB_URL=https://github.com/status-im/nimbus-deps/releases/download/nimbus-deps/nimbus-deps.zip" &
      SET "ROCKSDB_ARCHIVE=nimbus-deps.zip"
    )

  # use the newest versions documented here: https://www.appveyor.com/docs/windows-images-software/#mingw-msys-cygwin
  - IF "%PLATFORM%" == "x86" SET PATH=C:\mingw-w64\i686-6.3.0-posix-dwarf-rt_v5-rev1\mingw32\bin;%PATH%
  - IF "%PLATFORM%" == "x64" SET PATH=C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin;%PATH%

  - MKDIR %CD%\bin
  - SET PATH=%CD%\bin;%CD%\Nim\bin;%PATH%

  # Unpack sqlite
  - IF not exist "%SQLITE_ARCHIVE%" appveyor DownloadFile "%SQLITE_URL%" -FileName "%SQLITE_ARCHIVE%"
  - 7z x -y "%SQLITE_ARCHIVE%" > nul
  - IF "%PLATFORM%" == "x64" ( copy %CD%\sqlite3.dll %CD%\bin\sqlite3_64.dll ) ELSE ( copy %CD%\sqlite3.dll %CD%\bin\sqlite3_32.dll )

  # Unpack rocksdb
  - IF not exist "%ROCKSDB_ARCHIVE%" appveyor DownloadFile "%ROCKSDB_URL%" -FileName "%ROCKSDB_ARCHIVE%"
  - 7z x -y "%ROCKSDB_ARCHIVE%" > nul
  - IF "%PLATFORM%" == "x64" ( copy %CD%\x64\librocksdb.dll %CD%\bin\librocksdb.dll ) ELSE ( copy %CD%\x86\librocksdb.dll %CD%\bin\librocksdb.dll )

  # build nim from our own branch - this to avoid the day-to-day churn and
  # regressions of the fast-paced Nim development while maintaining the
  # flexibility to apply patches
  - curl -O -L -s -S https://raw.githubusercontent.com/status-im/nimbus/devel/build_nim.sh
  - env MAKE="mingw32-make -j2" ARCH_OVERRIDE=%PLATFORM% bash build_nim.sh Nim csources dist/nimble NimBinaries

build_script:
  - cd C:\projects\%APPVEYOR_PROJECT_SLUG%
  - bash -c "nimble install -y"

test_script:
  - nimble test

deploy: off
