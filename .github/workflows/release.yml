on:
  push:
    tags:
    - 'v*' # "v1.2.3"

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        id: build_linux
        run: |
          #echo "::set-output name=tag::"$(echo ${{ github.ref }} | sed 's%refs/tags/%%')
          #curl -sSOL https://github.com/status-im/nimbus-eth2/archive/$(echo ${{ github.ref }} | sed 's%refs/tags/%%').tar.gz
          make dist
          cd dist
          echo "::set-output name=linux_amd64_archive::"$(echo nimbus-eth2_Linux_amd64_*.tar.gz)
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      #- name: Upload Release Tarball
        #uses: actions/upload-release-asset@v1
        #env:
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #with:
          #upload_url: ${{ steps.create_release.outputs.upload_url }}
          #asset_path: ${{ steps.build_linux.outputs.tag }}.tar.gz
          #asset_name: nimbus-eth2-${{ steps.build_linux.outputs.tag }}.tar.gz
          #asset_content_type: application/gzip
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/${{ steps.build_linux.outputs.linux_amd64_archive }}
          asset_name: ${{ steps.build_linux.outputs.linux_amd64_archive }}
          asset_content_type: application/gzip

